{"stache":[{"path":"/api/components/action-buttons","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nAction Buttons\nAction Buttons\nThe Action Buttons component provides a clean, visual navigation pattern for linking to multiple documents using the SKY UX Action Button.\nAction Buttons properties\nroutes — Specifies the properties for each action button in the list. Each button has the following properties:\nname — The name of the button.\npath — The path the button will route to when clicked.\nicon — The font awesome icon for the button.\nsummary — A description for the button.\nDemo\nLayout\nBasic page layouts using Stache and skyux pattern, for quick page layouts.\nLayout: Sidebar\nSide bar navigation layout pattern for creating quick documentation.\nCode\naction-buttons-demo-component.html action-buttons-demo-component.ts\n<stache-action-buttons [routes]=\"routes\">\n</stache-action-buttons>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/affix-top","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nAffix Top\nAffix Top\nThe affix component is an Angular 2 component that causes the affected components to affix to the top of your browser window as you scroll past it on the page. It uses the affix top directive to add styles and the stache-affix-top class to wrapped elements or components.\nThe affix top component is the recommended way to use the affix top feature. When an element affixes to the top of the window, an empty placeholder element is left behind, maintaining the page's size ratios.\nDemo\nAffixes to the top of the page.\nCode\naffix-top.directive.ts\n<stache-affix>\n  <div>\n    Affixes to the top of the page.\n  </div>\n</stache-affix>\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/alerts","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nAlert\nAlert\nThis SKY UX component formats an alert for when you need to call extra attention to some documentation.\nDemo\nI am an \"info\" alert.\nI am a \"success\" alert.\nI am a \"warning\" alert.\nI am a \"danger\" alert.\nCode\nalert\n<sky-alert alertType=\"info\">\n I am an \"info\" alert.\n</sky-alert>\n\n<sky-alert alertType=\"success\">\n I am a \"success\" alert.\n</sky-alert>\n\n<sky-alert alertType=\"warning\">\n I am a \"warning\" alert.\n</sky-alert>\n\n <sky-alert alertType=\"danger\">\n I am a \"danger\" alert.\n</sky-alert>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/back-to-top","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nBack To Top\nBack To Top\nThe back to top component enables users to quickly navigate back to the top of a page.\nBack To Top properties\noffset — (Optional.) The pixel offset from the top to show the button. The default is 200.\nDemo\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores earum veniam incidunt rerum porro tenetur possimus natus eligendi, officia quasi est voluptatum, ab distinctio consequatur minus, nesciunt optio qui! Voluptate?\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores earum veniam incidunt rerum porro tenetur possimus natus eligendi, officia quasi est voluptatum, ab distinctio consequatur minus, nesciunt optio qui! Voluptate?\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores earum veniam incidunt rerum porro tenetur possimus natus eligendi, officia quasi est voluptatum, ab distinctio consequatur minus, nesciunt optio qui! Voluptate?\nCode\nback-to-top-demo-component.html\n<stache-back-to-top offset=\"1\">\n</stache-back-to-top>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/breadcrumbs","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nBreadcrumbs\nBreadcrumbs\nThe Breadcrumbs component displays a menu at the top of a page to help users keep track of their location in the app.\nBreadcrumbs properties\nroutes — The routes to populate the breadcrumb trail. This property takes an array of stache-nav-link objects.\nDemo\nHome\nContribute\nComponents\nBreadcrumbs\nCode\nbreadcrumbs-demo-component.html breadcrumbs-demo-component.ts\n<stache-breadcrumbs [routes]=\"routes\">\n</stache-breadcrumbs>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/code","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nCode\nCode\nThe code component formats in line code snippets in a consistent way.\nDemo\nThis page uses the layout=\"sidebar\" property.\nCode\ncode-demo-component.html\n<p>\n  This page uses the <stache-code>layout=\"sidebar\"</stache-code> property.\n</p>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/code-block","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nCode Block\nCode Block\nThe code block component displays a formatted block of code with syntax highlighting.\nCode Block properties\ncode — (Optional.) Pass a code sample into the component. You must use the raw loader for the code to render it as a string.\nlanguageType — (Optional.) The language of the code sample for syntax highlighting. You can see the supported languages here. The default is markup.\nDemo\n$(document).ready(() => {\n  console.log('jQuery is ready!');\n});\n<p>Hey! {{name}}</p>\nCode\ncode-block-demo-component.html\n<stache-code-block languageType=\"js\">\n  $(document).ready(() => {\n    console.log('jQuery is ready!');\n  });\n  <p>Hey! {{name}}</p>\n</stache-code-block>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/container","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nContainer\nContainer\nThe container component wraps content in a stache container for formatting.\nDemo\nHere is some content! It's in a container!\nCode\ncontainer-demo-component.html\n<stache-container>\n  Here is some content! It's in a container!\n</stache-container>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/grid","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nGrid\nGrid\nThe Grid components provide a 12 column layout grid for organizing content for all device sizes. The grid consists of stache-row and stache-column tags. Every column must be contained in a row.\nStache Row properties\nreverseColumnOrder — (Optional.) Reverses the display order for the columns when set to true.\nStache Column properties\nscreenSmall — The number of columns (1-12) for a small screen (768px).\nscreenMedium — The number of columns (1-12) for a medium screen (992px).\nscreenLarge — The number of columns (1-12) for a large screen (1200px).\nDemo\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"2\"\nsmall=\"2\"\nsmall=\"2\"\nsmall=\"2\"\nsmall=\"2\"\nsmall=\"2\"\nsmall=\"3\"\nsmall=\"3\"\nsmall=\"3\"\nsmall=\"3\"\nsmall=\"4\"\nsmall=\"4\"\nsmall=\"4\"\nsmall=\"5\"\nsmall=\"7\"\nsmall=\"6\"\nsmall=\"6\"\nsmall=\"8\"\nsmall=\"4\"\nsmall=\"9\"\nsmall=\"3\"\nsmall=\"10\"\nsmall=\"2\"\nsmall=\"11\"\nsmall=\"1\"\nsmall=\"8\" medium=\"9\" large=\"10\"\nsmall=\"4\" medium=\"3\" large=\"2\"\nReversing column order:\nFirst column\nSecond column\nCode\ngrid-demo-component.html\n<stache-row>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"3\">\n    screenSmall=\"3\"\n  </stache-column>\n  <stache-column screenSmall=\"3\">\n    screenSmall=\"3\"\n  </stache-column>\n  <stache-column screenSmall=\"3\">\n    screenSmall=\"3\"\n  </stache-column>\n  <stache-column screenSmall=\"3\">\n    screenSmall=\"3\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"4\">\n    screenSmall=\"4\"\n  </stache-column>\n  <stache-column screenSmall=\"4\">\n    screenSmall=\"4\"\n  </stache-column>\n  <stache-column screenSmall=\"4\">\n    screenSmall=\"4\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"5\">\n    screenSmall=\"5\"\n  </stache-column>\n  <stache-column screenSmall=\"7\">\n    screenSmall=\"7\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"6\">\n    screenSmall=\"6\"\n  </stache-column>\n  <stache-column screenSmall=\"6\">\n    screenSmall=\"6\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"8\">\n    screenSmall=\"8\"\n  </stache-column>\n  <stache-column screenSmall=\"4\">\n    screenSmall=\"4\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"9\">\n    screenSmall=\"9\"\n  </stache-column>\n  <stache-column screenSmall=\"3\">\n    screenSmall=\"3\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"10\">\n    screenSmall=\"10\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"11\">\n    screenSmall=\"11\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"8\" screenMedium=\"9\" screenLarge=\"10\">\n    screenSmall=\"8\" screenMedium=\"9\" screenLarge=\"10\"\n  </stache-column>\n  <stache-column screenSmall=\"4\" screenMedium=\"3\" screenLarge=\"2\">\n    screenSmall=\"4\" screenMedium=\"3\" screenLarge=\"2\"\n  </stache-column>\n</stache-row>\n\n<h4>Reversing column order:</h4>\n\n<stache-row reverseColumnOrder=\"true\">\n  <stache-column screenSmall=\"9\">\n    First column\n  </stache-column>\n  <stache-column screenSmall=\"3\">\n    Second column\n  </stache-column>\n</stache-row>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/hero","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nHero\nHero\nThe Hero component adds a Hero with a background image, title, and subheading information to your Stache page.\nNote: This component should be used outside of a stache tag.\nHero properties\noverlayOpacity — Decimal value for how much your image should be darkened. The default is 0.4, acceptable values are any decimal between 0 and 1.\nbackgroundImageUrl — Set this to the name of your image, prepended with ~/assets/, e.g.: ~/assets/foo.jpg. All images and other static assets should be stored in the src/assets directory.\nDemo\nDemo Hero\nHero demo subheading information.\nCode\nhero.component.html\n<stache-hero overlayOpacity=\"0.4\" backgroundImageUrl=\"~/assets/image-name.jpg\">\n  <stache-hero-heading>\n    Demo Hero\n  </stache-hero-heading>\n  <stache-hero-subheading>\n    Hero demo subheading information.\n  </stache-hero-subheading>\n</stache-hero>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/image","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nImage\nImage\nThe Image component provides a responsive container for an image.\nImage properties\nimageSource — The path to the image to render.\nDemo\nCode\ncode-demo-component.html\n<stache-image imageSource=\"~/assets/hero-sample-1.jpg\">\n</stache-image>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/include","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nInclude\nInclude\nThe include component supports single source documentation. It allows you to store content in the src/stache/includes/ directory and then reuse it throughout your documentation. This is useful if you have small chunks of content that you find yourself repeating in several places. You can use an include, update it in one place, and it'll change everywhere it's used.\nContent you wish to include should be placed in the src/stache/includes/ directory. For example:\nsrc\nstache\nincludes\nexample.html\nNote: Includes are for static content. For dynamic content, create a custom component instead.\nInclude properties\nfileName — The name of the file in your src/stache/includes/ directory, including the extension.\nDemo\nInclude\nWe are including content from the includes directory!\nCode\ncode-demo-component.html\n<stache-include fileName=\"example.html\">\n</stache-include>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nComponents\nTo create high quality technical documentation, Stache components are Angular 2 components, services, and modules that serve as a complement to SKY UX.\nAction buttons\nProvides a clean, visual navigation pattern for linking to multiple documents using the SKY UX Action Button.\nAffix top\nWraps elements and causes them to affix to the window on scroll.\nBack to top\nProvides a quick way to return to the top of a page.\nBreadcrumbs\nDisplays a menu at the top of the page to help users keep track of their location within the app.\nCode\nProvides a formatted in line snippet of code.\nCode block\nProvides a formatted block of code with syntax highlighting.\nContainer\nWraps content in a Stache container for formatting.\nGrid\nProvides a layout grid for creating responsive content.\nHero\nProvides a Hero with a background image, title, and subheading information to your Stache page.\nImage\nProvides a responsive image container.\nInclude\nProvides a mechanism for single sourcing static content.\nNav\nHandles navigation consistently throughout a Stache application.\nPage anchor\nProvides a section anchor for inter page navigation.\nPage header\nProvides a header for each Stache page.\nPage summary\nProvides a formatted section at the top of the page for summary content.\nPage title\nProvides a title for each Stache page.\nSidebar\nGenerates the side navigation for the sidebar layout.\nStache wrapper\nProvides a container for all Stache components.\nTable of contents\nGenerates the inter page navigation using Stache page anchors.\nTutorial\nProvides a formatted and styled tutorial pattern.\nVideo\nProvides a responsive container for video embeds."},{"path":"/api/components/nav","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nNav\nNav\nThe Nav component handles and automates navigation and routing throughout a Stache application.\nNav properties\nroutes — The routes that the nav component is responsible for. This property takes an array of stache-nav-link objects.\nnavType — The type of nav being rendered by the nav component. The two available types are breadcrumbs and sidebar.\nDemo\nHome\nContribute\nComponents\nNav\nCode\nnav-demo-component.html nav-demo-component.ts\n<stache-nav [routes]=\"routes\" navType=\"breadcrumbs\">\n</stache-nav>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/page-anchor","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nPage Anchor\nPage Anchor\nThe page anchor component is used to construct the table of contents and creates an anchor to specific sections on a page.\nDemo\nSection Anchor\nCode\npage-anchor-demo-component.html\n<stache-page-anchor>\n  Section Anchor\n</stache-page-anchor>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/page-header","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nPage Header\nPage Header\nThe Page Header component displays a consistent header on every page. Typically, this contains the stache title.\nDemo\nTitle!\nCode\npage-header-demo-component.html\n<stache-page-header>\n  <stache-page-title>\n    Title!\n  </stache-page-title>\n</stache-page-header>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/page-summary","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nPage Summary\nPage Summary\nThe page summary component provides a formatted section at the top of the page for summary content.\nDemo\nThis is an example of a summary.\nCode\npage-summary-demo-component.html\n<stache-page-summary>\n  This is an example of a summary.\n</stache-page-summary>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/page-title","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nPage Title\nPage Title\nThe Page Title component displays the title of the page as an H1 tag.\nDemo\nTitle!\nCode\npage-title-demo-component.html\n<stache-page-title>\n  Title!\n</stache-page-title>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/sidebar","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nSidebar\nSidebar\nThe Sidebar component generates the navigation for the sidebar layout.\nSidebar properties\nroutes — The routes that populate the sidebar navigation. This property takes an array of stache-nav-link objects.\nDemo\nLearn\nComponents\nContribute\nCode\nsidebar-demo-component.html sidebar-demo-component.ts\n<stache-row>\n  <stache-column screenSmall=\"2\">\n    <stache-sidebar [routes]=\"routes\">\n    </stache-sidebar>\n  </stache-column>\n</stache-row>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/table-of-contents","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nTable of Contents\nTable of Contents\nThe Table of Contents component generates inter page navigation based on every stache-page-anchor component on a page in order of appearance.\nBreadcrumbs properties\nroutes — The routes to populate table of contents. This property takes an array of stache-nav-link objects.\nDemo\nContents\nHome\nContribute\nComponents\nTable Of Contents\nCode\ntable-of-contents-demo-component.html table-of-contents-demo-component.ts\n<stache-table-of-contents [routes]=\"routes\">\n</stache-table-of-contents>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/tutorial","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nTutorial\nTutorial\nThe Tutorial component creates styled and comprehensive tutorials and numbered steps.\nStache Tutorial Step properties\nshowNumber — boolean value to count and show the number of the step. defaults to true.\nDemo\nDemo Tutorial\nSummary information about this demo tutorial.\nThis is our first demo step.\nThis is tutorial information about this first step.\nYou can include other components, and columns inside of these steps.\nYou can include other components, and columns outside of these too.\nInformational card without a step\nWe remove this step number and get a blank card.\nThis step resumes the numbering at the appropriate step number. Also does not include a title.\nCode\ndemo tutorial component\n<stache-tutorial>\n  <stache-tutorial-heading>\n    Demo Tutorial\n  </stache-tutorial-heading>\n  <stache-tutorial-summary>\n    Summary information about this demo tutorial.\n  </stache-tutorial-summary>\n\n  <stache-tutorial-step>\n    <stache-tutorial-step-heading>\n      This is our first demo step.\n    </stache-tutorial-step-heading>\n    <stache-tutorial-step-body>\n      This is tutorial information about this first step.\n      <sky-alert alertType=\"info\">\n        You can include other components, and columns inside of these steps.\n      </sky-alert>\n    </stache-tutorial-step-body>\n  </stache-tutorial-step>\n\n  <sky-alert alertType=\"info\">\n    You can include other components, and columns outside of these too.\n  </sky-alert>\n\n  <stache-tutorial-step showNumber=\"false\">\n    <stache-tutorial-step-heading>\n      Informational card without a step\n    </stache-tutorial-step-heading>\n    <stache-tutorial-step-body>\n      We remove this step number and get a blank card.\n    </stache-tutorial-step-body>\n  </stache-tutorial-step>\n\n  <stache-tutorial-step>\n    <stache-tutorial-step-body>\n      This step resumes the numbering at the appropriate step number. Also does not include a title.\n    </stache-tutorial-step-body>\n  </stache-tutorial-step>\n</stache-tutorial>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/video","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nVideo\nVideo\nThe Video component provides a responsive embed for video.\nVideo properties\nvideoSource — The url for the video.\nDemo\nCode\ncode-demo-component.html\n<stache-video videoSource=\"https://player.vimeo.com/video/121445495?title=0&portrait=0&byline=0\">\n</stache-video>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/components/wrapper","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nComponents\nWrapper\nWrapper\nThe wrapper component is the primary component for Stache. It handles configuration, layouts, and routing for every Stache page.\nWrapper properties\npageTitle — Sets the heading for the page.\nlayout — (Optional) You can specify a specific type of layout for each Stache page. The default is sidebar.\nsidebar — Displays a sidebar navigation on the page for each child directory.\ncontainer — Displays content in a responsive container with margins on either side.\nblank — Displays content with no container.\nshowBackToTop — Determines if the back to top button displays on the page when the user scrolls past a 200px offset from the top. The default is true.\nshowBreadcrumbs — Determines if the breadcrumb navigation displays on the page. The default is true.\nshowTableOfContents — Determines if the table of contents displays on the page. The default is false.\nsidebarRoutes — The routes used to populate the sidebar navigation. These are set automatically by Stache but can be overwritten with a custom value.\ninPageRoutes — The routes used to populate the table of contents navigation. These are set automatically by Stache but can be overwritten with a custom value.\nbreadcrumbsRoutes — The routes used to populate the breadcrumbs navigation. These are set automatically by Stache but can be overwritten with a custom value.\nnavOrder — This number dictates the order in which your routes will render in the sidebar next to their sibling routes.\nnavTitle — Sets the route's title in the sidebar and breadcrumb navigations.\nDemo\nHome\nAPI\nComponents\nWrapper\nWrapper\nSummary section for the page.\nContents\nSub heading\nSub heading\nCode\nwrapper-demo-component.html\n<stache pageTitle=\"Wrapper\" navOrder=\"5\" showTableOfContents=\"true\">\n\n  <stache-page-summary>\n    Summary section for the page.\n  </stache-page-summary>\n\n  <stache-page-anchor>\n    Sub heading\n  </stache-page-anchor>\n</stache>\nAPI\nComponents\nAction Buttons\nAffix Top\nAlert\nBack To Top\nBreadcrumbs\nCode\nCode Block\nContainer\nGrid\nHero\nImage\nInclude\nNav\nPage Anchor\nPage Header\nPage Summary\nPage Title\nSidebar\nTable of Contents\nTutorial\nVideo\nWrapper\nDirectives"},{"path":"/api/directives/affix-top","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nDirectives\nAffix Top\nAffix Top\nThe affix top directive is an Angular 2 directive that causes the components to affix to the top of the browser window as users scroll past them on the page. The directive adds styles to the component and toggles the stache-affix-top class.\nWe do not recommend using the stacheAffixTop directive on its own. Instead, use the affix top component.\nDemo\nAffixes to the top of the page.\nCode\naffix-top.directive.ts\n<div stacheAffixTop=\"\">\n  Affixes to the top of the page.\n</div>\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nBullet list to extend the page for the demo\nAPI\nComponents\nDirectives\nAffix Top"},{"path":"/api/directives","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nDirectives\nDirectives\nThe following Angular 2 directives facilitate abstractions that are built into Stache. They can be used independently, but they are not a public part of the Stache content creation library.\nAffix top\nCauses the affected component to affix to the top of the page."},{"path":"/api","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nAPI\nAPI\nReview these components and directives that compose the Stache 2 component library and how they serve as a complement to SKY UX. To contribute to the component library, review our contribution guidelines .\nComponents\nReview how these Angular 2 components, services, and modules facilitate Stache 2.\nDirectives\nReview how these Angular 2 directives facilitate Stache 2."},{"path":"/content/action-buttons","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nAction Buttons\nAction Buttons\nThe Action Buttons component provides a clean, visual navigation pattern for linking to multiple documents using the SKY UX Action Button.\nAction button properties\nroutes — Specifies the properties for each action button in the list. Each button has the following properties:\nname — The name of the button.\npath — The path the button will route to when clicked.\nicon — The font awesome icon for the button.\nsummary — A description for the button.\nTip: Action button paths only work with links within your site. In the future, you will be able to use external hrefs. Until then, you can link to another page on your site that contains a redirect to the external source.\nDemo\nRock\nEnter a description of what to find at the navigation item.\nPaper\nKeep the length relatively short.\nScissors\nWrite the description with a positive verb about what the user can do on the next page.\nLizard\nAction buttons are great for top-level pages.\nSpock\nIt's okay to leverage some modest humor to amuse the user.\nCode\nsample uniquefilename.json\n<stache-action-buttons [routes]=\"stache.jsonData?.uniquefilename\">\n</stache-action-buttons>\nWhen you use this on your site, you'll change the uniquefilename part to the name of your file.\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/alerts","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nAlert\nAlert\nThis SKY UX component formats an alert for when you need to call extra attention to some documentation.\nDemo\nI am an \"info\" alert.\nI am a \"success\" alert.\nI am a \"warning\" alert.\nI am a \"danger\" alert.\nCode\nsample\n<sky-alert alertType=\"info\">\n  I am an \"info\" alert.\n</sky-alert>\n\n<sky-alert alertType=\"success\">\n  I am a \"success\" alert.\n</sky-alert>\n\n<sky-alert alertType=\"warning\">\n  I am a \"warning\" alert.\n</sky-alert>\n\n<sky-alert alertType=\"danger\">\n  I am a \"danger\" alert.\n</sky-alert>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/buttons","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nButtons\nButtons\nThis SKY UX component creates buttons to trigger action.\nDemo\nPrimary Secondary\nCode\nsample\n<button type=\"button\" class=\"sky-btn sky-btn-primary\">Primary</button>\n\n<button type=\"button\" class=\"sky-btn sky-btn-default\">Secondary</button>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/cards","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nCards\nCards\nThis SKY UX component creates a small container to highlight important information. Generally, multiple cards are organized together to display information about a collection of related items, like a matrix of images.\nCard properties\nsize — (Optional) Specifies the size of the card, large or small (default: large).\nDemo\nLarge card\nThis card demonstrates the amount of space that is available for a card that uses the default large size. If the content does not require this much space, you can set the card size to small. The type of content to display in the body of a card varies based on what the card represents and whether it prompts users to action. The content can consist of some combination of a graph, trend, status, summary information, and guidance text.\nClick me\nSmall card\nThis card demonstrates the reduced amount of space that is available when you set the card size to small. If the content requires additional space, you can use the default card size of large.\nThis card demonstrates a card with no title, just a body of content. However, you can use a different type of action button at the bottom that enable multiple links.\nCode\nlarge card small card action button context menu\n<sky-card>\n  <sky-card-title>Large card</sky-card-title>\n  <sky-card-content>\n    Card content\n  </sky-card-content>\n</sky-card>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/code","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nCode\nCode\nThe code component formats in line code snippets in a consistent way.\nDemo\nThis page uses the layout=\"sidebar\" property.\nCode\nsample\n<p>\n  This page uses the <stache-code>layout=\"sidebar\"</stache-code> property.\n</p>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/code-block","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nCode Block\nCode Block\nThe code block component displays a formatted block of code with syntax highlighting.\nCode Block properties\ncode — (Optional) Pass a code sample into the component.\nlanguageType — (Optional) The language of the code sample for syntax highlighting. You can see the supported languages here. The default is markup.\nDemo\n$(document).ready(() => {\n  console.log('jQuery is ready!');\n});\n<p>Hey! {{name}}</p>\nCode\nsample\n<stache-code-block languageType=\"js\">\n  $(document).ready(() => {\n    console.log('jQuery is ready!');\n  });\n  <p>Hey! {{name}}</p>\n</stache-code-block>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/config-data","text":"Local dev mode (show/hide info)\nHome\nContent\nConfiguration and Data\nConfiguration and Data\nData and configuration are an important component for any documentation site. This section outlines how to make use of data in your documentation and how to properly configure your Stache site.\nContents\nJSON Data Service\nConfiguration\nJSON Data Service\nStache can consume JSON data files and provide them to you for use in your Stache templates and components. There is a default global.json file that you can use for any variable data you wish to include.\nNote: To use the data, you need to add the Stache plugin to the plugins array in skyuxconfig.json. See plugins for more information.\nData you wish to consume should be placed in the src/stache/data/ directory. For example:\nsrc\nstache\ndata\nexample.json\nNote: Make sure to name your files with names that can be converted to valid object keys. Ex: data_file.json or dataFile.json\nWe can then use that data in a template like so:\n<p>{{ stache.jsonData?.example.key }}</p>\nIf you want to use the data in a component, you can do so with the StacheJsonDataService by adding it to your component:\nimport { Component, OnInit } from '@angular/core';\nimport { StacheJsonDataService } from '@blackbaud/stache';\n\n@Component({\n  selector: 'my-component',\n  template: './my-component.component.html'\n})\nexport class MyComponent implements OnInit {\n\n  public allData: any;\n  public specificData: any;\n\n  constructor(\n    private dataService: StacheJsonDataService\n  ) { }\n\n  ngOnInit() {\n    this.allData = this.dataService.getAll();\n    this.specificData = this.dataService.getByName('example');\n  }\n}\nConfiguration\nApp specific configuration exists in the skyuxconfig.json file at the root of your project. This file should only contain app specific settings that are required for the functionality of your site. For example, keys for Google Analytics or plugins. Any variables that you wish to use in your app content should be in global.json or a custom json file. The stache template provides a location under appSettings for Stache specific settings.\n{\n  \"mode\": \"easy\",\n  \"compileMode\": \"aot\",\n  \"auth\": true,\n  \"plugins\": [\n    \"@blackbaud/skyux-builder-plugin-stache\",\n    \"@blackbaud/skyux-builder-plugin-auth-email-whitelist\"\n  ],\n  \"app\": {\n    \"title\": \"Stache 2 Template\"\n  },\n  \"appSettings\": {\n    \"stache\": { }\n  }\n}\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/grid","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nGrid\nGrid\nThe Grid components provide a 12 column layout grid for organizing content for all device sizes. The grid consists of stache-row and stache-column tags. Every column must be contained in a row.\nStache Row properties\nreverseColumnOrder — (Optional) Reverses the display order for the columns when set to true.\nStache Column properties\nscreenSmall — The number of columns (1-12) for a small screen (768px).\nscreenMedium — The number of columns (1-12) for a medium screen (992px).\nscreenLarge — The number of columns (1-12) for a large screen (1200px).\nTo handle behavior for multiple screen sizes, you can combine more than one size for each column. For example: <stache-column screenSmall=\"8\" screenMedium=\"9\" screenLarge=\"10\">. This is helpful if you want to more carefully control the breakpoints.\nDemo\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"1\"\nsmall=\"2\"\nsmall=\"2\"\nsmall=\"2\"\nsmall=\"2\"\nsmall=\"2\"\nsmall=\"2\"\nsmall=\"3\"\nsmall=\"3\"\nsmall=\"3\"\nsmall=\"3\"\nsmall=\"4\"\nsmall=\"4\"\nsmall=\"4\"\nsmall=\"5\"\nsmall=\"7\"\nsmall=\"6\"\nsmall=\"6\"\nsmall=\"8\"\nsmall=\"4\"\nsmall=\"9\"\nsmall=\"3\"\nsmall=\"10\"\nsmall=\"2\"\nsmall=\"11\"\nsmall=\"1\"\nsmall=\"8\" medium=\"9\" large=\"10\"\nsmall=\"4\" medium=\"3\" large=\"2\"\nReversing column order:\nFirst column\nSecond column\nCode\nsample\n<stache-row>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"3\">\n    screenSmall=\"3\"\n  </stache-column>\n  <stache-column screenSmall=\"3\">\n    screenSmall=\"3\"\n  </stache-column>\n  <stache-column screenSmall=\"3\">\n    screenSmall=\"3\"\n  </stache-column>\n  <stache-column screenSmall=\"3\">\n    screenSmall=\"3\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"4\">\n    screenSmall=\"4\"\n  </stache-column>\n  <stache-column screenSmall=\"4\">\n    screenSmall=\"4\"\n  </stache-column>\n  <stache-column screenSmall=\"4\">\n    screenSmall=\"4\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"5\">\n    screenSmall=\"5\"\n  </stache-column>\n  <stache-column screenSmall=\"7\">\n    screenSmall=\"7\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"6\">\n    screenSmall=\"6\"\n  </stache-column>\n  <stache-column screenSmall=\"6\">\n    screenSmall=\"6\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"8\">\n    screenSmall=\"8\"\n  </stache-column>\n  <stache-column screenSmall=\"4\">\n    screenSmall=\"4\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"9\">\n    screenSmall=\"9\"\n  </stache-column>\n  <stache-column screenSmall=\"3\">\n    screenSmall=\"3\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"10\">\n    screenSmall=\"10\"\n  </stache-column>\n  <stache-column screenSmall=\"2\">\n    screenSmall=\"2\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"11\">\n    screenSmall=\"11\"\n  </stache-column>\n  <stache-column screenSmall=\"1\">\n    screenSmall=\"1\"\n  </stache-column>\n</stache-row>\n\n<stache-row>\n  <stache-column screenSmall=\"8\" screenMedium=\"9\" screenLarge=\"10\">\n    screenSmall=\"8\" screenMedium=\"9\" screenLarge=\"10\"\n  </stache-column>\n  <stache-column screenSmall=\"4\" screenMedium=\"3\" screenLarge=\"2\">\n    screenSmall=\"4\" screenMedium=\"3\" screenLarge=\"2\"\n  </stache-column>\n</stache-row>\n\n<h4>Reversing column order:</h4>\n\n<stache-row reverseColumnOrder=\"true\">\n  <stache-column screenSmall=\"9\">\n    First column\n  </stache-column>\n  <stache-column screenSmall=\"3\">\n    Second column\n  </stache-column>\n</stache-row>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/hero","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nHero\nHero\nThe Hero component adds a Hero with a background image, title, and subheading information to your Stache page.\nNote: This component should be used outside of a stache tag.\nHero properties\noverlayOpacity — Decimal value for how much your image should be darkened. The default is 0.4, acceptable values are any decimal between 0 and 1.\nbackgroundImageUrl — Set this to the name of your image, prepended with ~/assets/, e.g.: ~/assets/foo.jpg. All images and other static assets should be stored in the src/assets directory.\nsrc\nassets\nhero.jpg\nDemo\nDemo Hero\nHero demo subheading information.\nCode\nsample\n<stache-hero overlayOpacity=\"0.4\" backgroundImageUrl=\"~/assets/image-name.jpg\">\n  <stache-hero-heading>\n    Demo Hero\n  </stache-hero-heading>\n  <stache-hero-subheading>\n    Hero demo subheading information.\n  </stache-hero-subheading>\n</stache-hero>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/image","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nImage\nImage\nThe Image component provides a responsive container for an image.\nImage properties\nimageSource — The path to the image to render.\nAll images and other static assets should be stored in thesrc/assets directory.\nsrc\nassets\nimage-name.jpg\nIf you need to upload a lot of image files, we recommend you organize your images into subfolders by page name.\nDemo\nCode\nsample\n<stache-image\n   imageSource=\"~/assets/image-name.jpg\">\n </stache-image>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/include","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nInclude\nInclude\nThe include component supports single source documentation. It allows you to store content in the src/stache/includes/ directory and then reuse it throughout your documentation. This is useful if you have small chunks of content that you find yourself repeating in several places. You can use an include, update it in one place, and it'll change everywhere it's used.\nContent you wish to include should be placed in the src/stache/includes/ directory. For example:\nsrc\nstache\nincludes\nexample.html\nNote: Includes are for static content. For dynamic content, create a custom component instead.\nInclude properties\nfileName — The name of the file in your src/stache/includes/ directory, including the extension.\nDemo\nInclude\nWe are including content from the includes directory!\nCode\nsample\n<stache-include fileName=\"example.html\">\n</stache-include>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nContent\nTo create high quality technical documentation, Stache uses these layouts, style, and elements.\nAction buttons\nProvides a clean, visual navigation pattern for linking to multiple documents using the SKY UX Action Button.\nAlerts\nProvides a formatted SKY UX-themed alert.\nButtons\nProvides a formatted SKY UX-themed button.\nCards\nProvides a formatted SKY UX-themed container to highlight important information.\nCode\nProvides a formatted in line snippet of code.\nCode block\nProvides a formatted block of code with syntax highlighting.\nConfiguration and Data\nProvides a mechanism for accessing data and site configuration.\nGrid\nProvides a layout grid for creating responsive content.\nHero\nProvides a Hero with a background image, title, and subheading information to your Stache page.\nImage\nProvides a responsive image container.\nInclude\nProvides a mechanism for single sourcing static content.\nLabels\nProvides a SKY UX-themed label for when you need to display important info.\nPage anchor\nProvides a section anchor for inter page navigation.\nPage summary\nProvides a formatted section at the top of the page for summary content.\nRepeater\nCreates a SKY UX-themed container to display information for a list of objects.\nStache wrapper\nProvides a container for all Stache components.\nTable of Contents\nProvides a quick and effortless way to navigate content on a page.\nTabs\nProvides a formatted SKY UX-themed tabset for your page.\nText Expand\nTruncates long text with an ellipsis and a link to expand the text.\nTutorial\nProvides a formatted and styled tutorial pattern.\nVideo\nProvides a responsive container for video embeds."},{"path":"/content/labels","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nLabels\nLabels\nThis SKY UX component formats a label for when you need to call out important status information.\nDemo\nInfo label Success label Warning label Danger label\nCode\nsample\n<sky-label labelType=\"info\">\n  Info label\n</sky-label>\n<sky-label labelType=\"success\">\n  Success label\n</sky-label>\n<sky-label labelType=\"warning\">\n  Warning label\n</sky-label>\n<sky-label labelType=\"danger\">\n  Danger label\n</sky-label>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/page-anchor","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nPage Anchor\nPage Anchor\nThe page anchor component is used to construct the table of contents and creates an anchor to specific sections on a page. It also formats as a natural section header.\nDemo\nAnchor #1\nAnchor #2\nCode\nsample\n<stache-page-anchor>\n  Anchor #1\n</stache-page-anchor>\n<stache-page-anchor>\n  Anchor #2\n</stache-page-anchor>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/page-summary","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nPage Summary\nPage Summary\nThe page summary provides a section at the top of the page to summarize what a user should expect to find or learn on the page. We recommend you use this component immediately after the <stache> tag.\nDemo\nThis is an example of a summary.\nCode\nsample\n<stache-page-summary>\n  This is an example of a summary.\n</stache-page-summary>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/repeater","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nRepeater\nRepeater\nThis SKY UX component creates a container to display information for a list of objects.\nRepeater properties\nexpandMode — (Optional) Specifies a layout for the repeater list to indicate whether users can collapse and expand repeater items. Items in a collapsed state display titles only. The valid options are none, multiple, and single.\nnone — loads all repeater items in an expanded state and does not allow users to collapse them. This standard layout provides the quickest access to the details in the repeater items.\nmultiple — loads all repeater items in a collapsed state and allow users to expand and collapse them. This layout provides a more compact view but still allows users to expand as many repeater items as necessary.\nsingle — loads all repeater items in a collapsed state and allow users to expand one item at a time. This layout provides the most compact view because users can only expand one repeater item at a time.\nDemo\nRepeater 'single' expand\nTitle\nTitle\nRepeater 'multiple' expand\nTitle\nTitle\nRepeater 'none'\nTitle\nContent\nTitle\nContent\nCode\nsingle multiple none\n<sky-repeater expandMode=\"single\">\n  <sky-repeater-item [isExpanded]=\"false\">\n    <sky-repeater-item-title>Title</sky-repeater-item-title>\n    <sky-repeater-item-content>Content\n    </sky-repeater-item-content>\n  </sky-repeater-item>\n\n  <sky-repeater-item [isExpanded]=\"false\">\n    <sky-repeater-item-title>Title</sky-repeater-item-title>\n    <sky-repeater-item-content>Content\n    </sky-repeater-item-content>\n  </sky-repeater-item>\n</sky-repeater>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/table-of-contents","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nTable of Contents\nTable of Contents\nThe table of contents enables you to navigate quickly within a page using page anchors. It also serves as an overview of the page contents. This component, combined with the back to top and page anchors, creates a quick and effortless way to navigate long form content.\nTo use the table of contents on your page, enable it on the stache tag.\nContents\nDemo\nCode\nDemo\nCode\nsample\n<stache pageTitle=\"My Sample Page\" showTableOfContents=\"true\">\n  <stache-page-anchor>\n    Section One\n  </stache-page-anchor>\n\n  // Some content\n\n  <stache-page-anchor>\n    Section Two\n  </stache-page-anchor>\n\n  // More content\n\n</stache>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/tabs","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nTabs\nTabs\nThis SKY UX component renders a tabset for your page.\nTab properties\ntabHeading — The text that appears on the tab.\ntabHeaderCount — (Optional) Displays a counter alongside the tab header. Can provide secondary information, such as time.\nDemo\ntab tabby tabbying 5\nTab content goes here.\nCode\nsample\n<sky-tabset>\n  <sky-tab tabHeading=\"tab\">\n    <p>Tab content goes here. </p>\n  </sky-tab>\n  <sky-tab tabHeading=\"tabby\">\n  <stache-code-block languageType=\"markup\">\n  Tabs can be great when you need to provide multiple code samples, like we do on this site.\n  </stache-code-block>\n  </sky-tab>\n  <sky-tab tabHeading=\"tabbying\" tabHeaderCount=\"5\">\n    <p>You can optionally provide a header count for the tab.</p>\n  </sky-tab>\n</sky-tabset>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/text-expand","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nText Expand\nText Expand\nThis SKY UX component truncates long text with an ellipsis and a link that allows the user to fully expand the text. If the text length falls below the specified threshold, then no action is taken.\nText expand properties\ntext — The text to truncate.\nmaxLength — (Optional) The number of characters to show before truncating the text. To avoid truncating text in the middle of a word, the directive looks for a space in the 10 characters before the last character (default: 200).\nmaxExpandedLength — (Optional) The maximum number of characters to show in the inline expanded view. If the text includes more characters, then a modal view with the content will be displayed when the 'See more' link is clicked (default: 600).\nexpandModalTitle — (Optional) The title to display in the modal expanded view (default: Expanded View).\ntext expand repeater properties\ndata — The data to truncate.\nmaxItems — The number of items from the data to display before truncating.\nDemo\nText expand\nLucas ipsum dolor sit amet moff jade padmé wampa solo chewbacca vader dagobah dooku jabba. Lando palpatine organa c-3p0 leia solo fisto organa. Qui-gonn qui-gonn kashyyyk lando leia mon maul ben. ... See more\nText expand modal view\nLucas ipsum dolor sit amet ewok tatooine windu binks darth organa darth bothan organa luke. Bothan hoth mace alderaan wampa solo. Wicket lando wedge owen wampa vader. Bothan endor moff amidala jabba. ... See more\nText expand repeater\nYoda\nMace Windu\nQui-Gon Jinn\nSee more\nCode\ntext expand text expand modal view text expand repeater\n<sky-text-expand text=\"Lucas ipsum dolor sit amet moff jade padmé wampa solo chewbacca vader dagobah dooku jabba. Lando palpatine organa c-3p0 leia solo fisto organa. Qui-gonn qui-gonn kashyyyk lando leia mon maul ben. Bothan sidious antilles utapau owen dooku hoth hutt. Wedge moff moff jabba hutt lars. Darth organa windu solo lars moff. Utapau windu calrissian han sebulba. Gamorrean qui-gon jade jar antilles cade moff biggs calrissian. Anakin moff wookiee dantooine. Mara aayla organa skywalker ventress kamino windu ventress sith.\">\n</sky-text-expand>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/tutorial","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nTutorial\nTutorial\nThe Tutorial component creates styled and comprehensive step-by-step guides with numbered steps.\nStache Tutorial Step properties\nshowNumber — boolean value (true/false) to count and show the number of the step. Defaults to true.\nFor example, if you want an unnumbered step, such as an introduction, you can create a card outside of the tutorials automatic numbering with showNumber=\"false\".\nDemo\nDemo Tutorial\nSummary information about this demo tutorial.\nThis is our first demo step.\nThis is tutorial information about this first step.\nYou can include other components and columns inside of these steps.\nYou can include other components and columns outside of these steps too.\nInformational card without a step\nWe remove this step number and get a blank card.\nSteps resume\nThis step resumes the numbering at the appropriate step number.\nI'm a step without a title.\nCode\nsample title and summary step\n<stache-tutorial>\n  <stache-tutorial-heading>\n    Demo Tutorial\n  </stache-tutorial-heading>\n  <stache-tutorial-summary>\n    Summary information about this demo tutorial.\n  </stache-tutorial-summary>\n\n  <stache-tutorial-step>\n    <stache-tutorial-step-heading>\n      This is our first demo step.\n    </stache-tutorial-step-heading>\n    <stache-tutorial-step-body>\n      <p>This is tutorial information about this first step.</p>\n      <sky-alert alertType=\"info\">\n        You can include other components and columns inside of these steps.\n      </sky-alert>\n    </stache-tutorial-step-body>\n  </stache-tutorial-step>\n\n  <sky-alert alertType=\"info\">\n    You can include other components and columns outside of these steps too.\n  </sky-alert>\n\n  <stache-tutorial-step showNumber=\"false\">\n    <stache-tutorial-step-heading>\n      Informational card without a step\n    </stache-tutorial-step-heading>\n    <stache-tutorial-step-body>\n      We remove this step number and get a blank card.\n    </stache-tutorial-step-body>\n  </stache-tutorial-step>\n\n  <stache-tutorial-step>\n   <stache-tutorial-step-heading>\n      Steps resume\n    </stache-tutorial-step-heading>\n    <stache-tutorial-step-body>\n      This step resumes the numbering at the appropriate step number.\n    </stache-tutorial-step-body>\n  </stache-tutorial-step>\n\n  <stache-tutorial-step>\n    <stache-tutorial-step-body>\n      I'm a step without a title.\n    </stache-tutorial-step-body>\n  </stache-tutorial-step>\n</stache-tutorial>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/video","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nVideo\nVideo\nThe Video component provides a responsive embed for video.\nVideo properties\nvideoSource — The url for the video.\nYouTube\nTo find the YouTube url to use as the video source, you need to grab the source url from within the embed code. From a video's page on Youtube, select Share and then the Embed tab. Copy the src=\"\" url. Use this url with the Video component.\nVimeo\nTo find the Vimeo url to use as the video source, you need to grab the source url from within the embed code. From a video's page on Vimeo, select the share button and then copy the embed code. Vimeo does not enable you to select a portion. Paste the code into a text editor and copy the portion of the URL you need, starting with src=\"\".\nO365\nWhen you copy the source url from an O365 video, you need to copy the entire source url and not just a portion. If you use a portion, you may receive a \"This video is private\" or \"This video isn't available\" error on your page. The url you need to copy should look similar to this:\n<stache-video videoSource=\"https://blackbaud.sharepoint.com/portals/hub/_layouts/15/VideoEmbedHost.aspx?chId=fedcfc02%2Dd545%2D4155%2D973a%2Dd09a1fa6e003&vId=d2977531%2D1ce0%2D45c7%2D9b15%2D112f6cabe5f9&width=640&height=360&autoPlay=false&showInfo=true\">\n</stache-video>\nDemo\nCode\nsample\n<stache-video videoSource=\"https://player.vimeo.com/video/121445495?title=0&portrait=0&byline=0\">\n</stache-video>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"/content/wrapper","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nContent\nWrapper\nWrapper\nThe wrapper component is the primary component for Stache. It handles configuration, layouts, and routing for every Stache page. View this component's technical reference for more details.\nWrapper properties\npageTitle — Sets the heading for the page.\nlayout — (Optional) You can specify a specific type of layout for each Stache page. The default is sidebar.\nsidebar — Displays a sidebar navigation on the page for each child directory.\ncontainer — Displays content in a responsive container with margins on either side.\nblank — Displays content with no container.\nshowBackToTop — Determines if the back to top button displays on the page when the user scrolls past a 200px offset from the top. The default is true.\nshowBreadcrumbs — Determines if the breadcrumb navigation displays on the page. The default is true.\nshowTableOfContents — Determines if the table of contents displays on the page. The default is false.\nnavOrder — This number dictates the order in which your routes will render in the sidebar next to their sibling routes.\nnavTitle — Sets the route's title in the sidebar and breadcrumb navigations.\nDemo\nHome\nContent\nWrapper\nWrapper\nSummary section for the page.\nContents\nSub heading\nSub heading\nCode\nsample\n<stache pageTitle=\"Wrapper\" navOrder=\"5\" showTableOfContents=\"true\">\n\n  <stache-page-summary>\n    Summary section for the page.\n  </stache-page-summary>\n\n  <stache-page-anchor>\n    Sub heading\n  </stache-page-anchor>\n</stache>\nContent\nAction Buttons\nAlert\nButtons\nCards\nCode\nCode Block\nConfiguration and Data\nGrid\nHero\nImage\nInclude\nLabels\nPage Anchor\nPage Summary\nRepeater\nTable of Contents\nTabs\nText Expand\nTutorial\nVideo\nWrapper"},{"path":"","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nStache\nDocumentation components designed for SKY UX applications!\nThis is the work-in-progress documentation site for Stache 2, a component library designed to work with SKY UX Builder single-page applications (SPAs). For more information about SKY UX, visit their documentation.\nGetting Started\nLooking to provide technical documentation with Stache? You've come to the right place!\nBasics\nGet to know Stache better, including how its organized and how to create documentation.\nContent\nImprove your documentation beyond basic paragraphs and headers. Dig in!"},{"path":"/learn/add-stache","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nLearn\nAdd Stache\nAdd Stache to a SKY UX Application\nThis tutorial provides step-by-step instructions to add Stache to an existing SPA.\nInstall dependencies\nnpm install --save @blackbaud/stache\nAdd the Stache module to your application\nOpen the app-extras.module.ts file in your project. Import and export StacheModule to make Stache components available throughout the project.\nimport { NgModule } from '@angular/core';\n\nimport { StacheModule } from '@blackbaud/stache';\n\n// Specify entry components, module-level providers, etc. here.\n@NgModule({\n  imports: [\n    StacheModule\n  ],\n  exports: [\n    StacheModule\n  ],\n  ...\nDeclare plugins\nOpen the skyuxconfig.json file in your project. Add the required Stache plugins to the plugins array.\n{\n  \"name\": \"stache\",\n  \"mode\": \"easy\",\n  \"compileMode\": \"aot\",\n  \"plugins\": [\n    \"@blackbaud/skyux-builder-plugin-stache\"\n  ],\n  \"app\": {\n    \"title\": \"Stache 2 Documentation\"\n  }\n}\nIf you set \"auth\": true in skyuxconfig.json to require Blackbaud authentication, you can also use the skyux-builder-plugin-auth-email-whitelist plugin to lock authentication to the following approved email extensions:\nblackbaud.com\nblackbaud.me\nblackbaud.co.uk\nblackbaud.au\nmicroedge.com\nattentive.ly\neverydayhero.com\nIf you opt to use the whitelist plugin, you must add it to the plugins array.\n\"auth\": true\n\"plugins\": [\n  \"@blackbaud/skyux-builder-plugin-auth-email-whitelist\"\n  ...\nLearn\nGetting Started\nBasics\nUpdate Stache\nAdd Stache\nStache 2 Plugins"},{"path":"/learn/basics","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nLearn\nBasics\nBasics\nAs you are getting to know Stache, use the documentation below to understand how it's organized and how to create documentation using Stache.\nFolder Structure\nApplication Navigation\nStache Wrapper\nLayouts\nNavigation\nImages\nLinks\nCustom CSS\nCommand Line\nVSTS\n\n\nTools\nSample page\nAre you curious what a page would look like in Stache? Here's a sample page you can copy and paste into your application. In src/app/ create a new folder with a short name. The folder name is part of the page's URL, so keep it friendly and brief. Then, create a new file named index.html and paste the code below. After you save, type skyux serve to see your app, and your new page, locally.\n<app-nav>\n</app-nav>\n\n<stache\n  pageTitle=\"Awesome Documentation\"\n  showTableOfContents=\"true\"\n  navOrder=\"1\" >\n\n<stache-page-summary>\n I'm a well written, brief, summary of what to expect on this stellar page.\n</stache-page-summary>\n\n<stache-page-anchor>\n    Section One\n  </stache-page-anchor>\n\n<stache-image imageSource=\"~/assets/hero-sample-1.jpg\">\n</stache-image>\n\n<p><a routerLink=\"/support/changelog\">Good stuff can be found in our Changelog.</a></p>\n\n</stache>\nNext steps\nNow that you've learned some basics about Stache 2, you're ready to dive in!\nTo learn how to improve your documentation with layouts, style, and elements see the Content page.\nTo learn about the technical side of Stache and contribute, see the API page."},{"path":"/learn/get-started","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nLearn\nGetting Started\nCreate a New Stache 2 Documentation Site\nThis tutorial provides step-by-step instructions on how to create a new SKY UX Builder single-page application (SPA) with the Stache 2 component library.\nTip: Do you already have a SPA? Learn how to add the Stache component library.\nIf you require a GitHub repo, contact us before continuing.\nInstall SKY UX prerequisites\nTo prepare your machine for your new Stache documentation site, you need to install SKY UX's prerequisites.\nTo load your local single-page application into SKY UX Host, you must install the skyux-ca.crt root certificate. Follow the SSL certification installation instructions on the SKY UX website.\nInstall Node.js version 6+.\nDo not use Node.js verison 7+.\nDo you already have Node installed? To check your version, run node –v from the command line.\nFor Mac OS X, we recommend that you use Node Version Manager (nvm) to wrap your NodeJS installation so that it installs in your user directory and avoids permissions-related issues.\nInstall Git.\nFrom the command line, run npm install -g @blackbaud/skyux-cli.\nVerify you have access to Visual Studio Team Services (VSTS).\nCreate and provision your SKY UX application in the App Management Portal\nNext, we'll create your SKY UX application and repo with the SKY UX App Management Portal. This creates a Visual Studio Team Services (VSTS) repo for the application and also creates VSTS build and release definitions.\nNavigate to the SKY UX App Management Portal.\nEnter a name for your Stache site. We request that you append any documentation sites with -docs. For example: engineering-system-docs.\nTip: The name you enter here will become part of your site's URL.\nReview and approve the terms and conditions.\nSelect Create Your Application. This process may take a moment.\nWhen the application is created, a ready page appears. We recommend you save a copy of this page.\nCopy the Git Repo URL.\nClone your repo and set up your Stache site\nIn this step, we'll set up your local working copy of the VSTS repo and install Stache.\nNavigate to the folder on your computer where you have your VSTS and GitHub repos, or where you'd like to save your new repo.\nRight-click and select Git Bash Here.\nIn the command line, enter skyux new --template stache.\nIn the first prompt, enter the name you provided in the SKY UX App Management Portal. For example engineering-system-docs. The SKY UX CLI creates a folder with this name and prefixes it with \"skyux-spa.\"\nIn the second prompt, paste in the URL to your repo that we copied in step 2.6.\nYour repo is now being cloned and set up. This will take a few minutes.\nVerify authentication for your application\nAfter you create your application, it is available on the public Internet. Be careful to not allow anonymous users access to protected Blackbaud assets, such as user data or internal Blackbaud systems.\nWe default to Blackbaud Authentication turned on, but we recommend your first step be to verify it.\nNavigate to the repo on your local machine.\nOpen skyuxconfig.json file in your preferred text editor.\nFind \"auth\": true as seen below and double-check that the config setting is true.\n{\n  \"mode\": \"easy\",\n  \"compileMode\": \"aot\",\n  \"auth\": true,\n  \"plugins\": [\n    \"@blackbaud/skyux-builder-plugin-stache\",\n    \"@blackbaud/skyux-builder-plugin-auth-email-whitelist\"\n  ],\n  \"app\": {\n    \"title\": \"Stache 2 Template\"\n  },\n  \"appSettings\": {\n    \"stache\": {\n    }\n  }\n}\nView your new Stache application\nIn Stache 2, to see your site is slightly different from Stache 1.\nFrom the command line, enter skyux serve. A new browser window opens to your documentation site.\nTip: The URL in your browser is the same as your production URL. The red bar at the top of the page indicates when you are in \"dev mode.\" To see your production site, select the red bar and then select delete next to Custom Config. To return to dev mode, stop serving in your command prompt and serve again.\nNext steps\nYou are now ready to create stellar technical documentation. To continue the learning, we recommend you review:\nStache Basics\nHow to update Stache\nComponents\nLearn\nGetting Started\nBasics\nUpdate Stache\nAdd Stache\nStache 2 Plugins"},{"path":"/learn","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nLearn\nLearn\nStache 2 is a component library for SKY UX single-page applications (SPAs). The Stache components facilitate the creation of consistent, coordinated technical documentation that features SKY UX-approved styles.\n\nWork in Progress! To better support technical documentation, we are continuing to add new features and components.\nGetting Started\nBuilding from scratch? Learn how to create a brand new Stache 2 SPA!\nBasics\nLearn how Stache is organized and how to get started creating documentation.\nAdd Stache to a SKYUX SPA\nTo add the Stache template and components to an existing SKY UX project, follow our tutorial.\nUpdate Stache\nLearn how to update your app to the latest version of Stache.\nStache 2 Plugins\nLearn about the plugins Stache uses to expand the features of SKY UX Builder."},{"path":"/learn/plugins/email-whitelist","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nLearn\nStache 2 Plugins\nEmail Whitelist Plugin\nEmail Whitelist Plugin\nThe email whitelist plugin restricts access to a SKYUX SPA to only users with valid blackbaud email addresses.\ngithub repository\nLearn\nGetting Started\nBasics\nUpdate Stache\nAdd Stache\nStache 2 Plugins\nEmail Whitelist Plugin\nStache Plugin"},{"path":"/learn/plugins","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nLearn\nStache 2 Plugins\nStache 2 Plugins\nIn order to expand upon and create new functionality with SKY UX Builder, Stache makes use of plugins. Each plugin is geared towards a specific purpose, and most of them are required to make use of certain Stache components.\nContents\nRequired Plugin for all projects\nOptional Plugins\nAdding Plugins to your project\nThe majority of plugins required by Stache in order to make use of all components are bundled into the @blackbaud/skyux-builder-plugin-stache plugin. Below are lists of required and optional plugins, and instructions on importing them into your Stache project.\nIf you created a new project with skyux new --template stache these plugins are added for you. If you are upgrading to a newer version of stache, please check to ensure you have all required plugins installed.\nRequired Plugin for all projects\n\"@blackbaud/skyux-builder-plugin-stache\"\nOptional Plugins\n@blackbaud/skyux-builder-plugin-auth-email-whitelist\nAdding Plugins to your project\nOnce you have your package.json updated to install the latest version of stache2, you will need to also add any required plugins to the plugins array in your skyuxconfig.json file.\n{\n  \"name\": \"stache\",\n  \"mode\": \"easy\",\n  \"compileMode\": \"aot\",\n  \"plugins\": [\n    \"@blackbaud/skyux-builder-plugin-stache\"\n  ],\n  \"app\": {\n    \"title\": \"Stache 2 Documentation\"\n  }\n}\nLearn\nGetting Started\nBasics\nUpdate Stache\nAdd Stache\nStache 2 Plugins\nEmail Whitelist Plugin\nStache Plugin"},{"path":"/learn/plugins/stache","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nLearn\nStache 2 Plugins\nStache Plugin\nStache Plugin\nThe Stache Plugin contains multiple different plugins which enable various features in Stache, such as JSON data, includes, and route metadata.\ngithub repository\nLearn\nGetting Started\nBasics\nUpdate Stache\nAdd Stache\nStache 2 Plugins\nEmail Whitelist Plugin\nStache Plugin"},{"path":"/learn/update-stache","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nLearn\nUpdate Stache\nUpdate Stache\nThis tutorial provides step-by-step instructions to update your app to the latest version of Stache.\nUpdate the Stache version\nOpen the package.json file in your project. Update @blackbaud/stache under the dependencies property to install the latest version of Stache.\nTo find the latest version, check the Stache changelog.\n\"dependencies\": {\n  \"@blackbaud/stache\": \"2.0.0-rc.1\",\n  ...\nBefore you update, review the changelog for breaking changes.\nUpdate the Sky dependencies\nOpen the package.json file in your project. Update @blackbaud/skyux under dependencies and @blackbaud/skyux-builder under the devDependencies property to install the latest versions of each.\nYour updated package.json file with all Stache and Sky dependencies should look as follows.\nNOTE: With Stache Beta release 2.0.0-beta.9, codelyzer was removed as a dependency, and skyux was changed to a dev dependency.\n\"dependencies\": {\n  \"@blackbaud/skyux\": \"2.0.0-rc.9\",\n  \"@blackbaud/stache\": \"2.0.0-rc.1\"\n},\n\"devDependencies\": {\n  \"@blackbaud/skyux-builder\": \"1.0.0-rc.12\"\n}\nUpdate the required plugins\nOpen the skyuxconfig.json file in your project. Be sure you are listing all the required plugins for your project.\nNOTE: With Stache Beta release 2.0.0-beta.9, all plugins required by Stache are bundled into the one skyux-builder-plugin-stache plugin.\n{\n  \"name\": \"stache\",\n  \"mode\": \"easy\",\n  \"compileMode\": \"aot\",\n  \"plugins\": [\n    \"@blackbaud/skyux-builder-plugin-stache\"\n  ],\n  \"app\": {\n    \"title\": \"Stache 2 Documentation\"\n  }\n}\nUpdate App-Extras\nOpen the src/app-extras.module.ts file. Here we need to ensure we are importing the StacheModule.\nNOTE: With Stache Beta release 2.0.0-beta.9, we no longer need to require or declare the StacheConfigService in our providers array. The only relevant code for this file should be the StacheModule.\nimport { NgModule } from '@angular/core';\n\nimport { StacheModule } from '@blackbaud/stache';\n\n// Specify entry components, module-level providers, etc. here.\n@NgModule({\n  imports: [\n    StacheModule\n  ],\n  exports: [\n    StacheModule\n  ],\n  providers: [],\n  entryComponents: []\n})\nexport class AppExtrasModule { }\nUpdate node_modules\nDelete the node_modules/@blackbaud/ folder for your project to remove any outdated versions of Stache or its plugins.\nFrom the command prompt, run npm install to install Stache and its dependencies.\nUpdate components\nAs with any major update, existing components or implementations may change. Please make sure to review the Stache changelog for notes on breaking changes that may require you changes in how you use Stache components.\nLearn\nGetting Started\nBasics\nUpdate Stache\nAdd Stache\nStache 2 Plugins"},{"path":"/support/changelog/2017-05","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nSupport\nChangelog\nMay 2017\nMay 2017\nContents\n2.0.0-beta.1 (2017-05-31)\n2.0.0-beta.0 (2017-05-12)\n2.0.0-beta.1 (2017-05-31)\nUpdated dependencies and included the Auth Email Whitelist plugin.\nUpdated README.\nFixed async tests. (#159)\n2.0.0-beta.0 (2017-05-12)\nInitial release to NPM.\nSupport\nChangelog\nJune 2017\nMay 2017\nContribute"},{"path":"/support/changelog/2017-06","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nSupport\nChangelog\nJune 2017\nJune 2017\nMonitor this page to keep up with the latest changes and releases for Stache 2.\nContents\n2.0.0-beta.8 (2017-06-30)\n2.0.0-beta.7 (2017-06-22)\n2.0.0-beta.6 (2017-06-22)\n2.0.0-beta.5 (2017-06-22)\n2.0.0-beta.4 (2017-06-16)\n2.0.0-beta.3 (2017-06-15)\n2.0.0-beta.2 (2017-06-08)\n2.0.0-beta.8 (2017-06-30)\nAdded support for SKY UX 2.0.0-rc.2\nAdded support for SKY UX Builder 1.0.0-rc.4\n2.0.0-beta.7 (2017-06-22)\nUpdated SKY UX to 2.0.0-rc.1.\n2.0.0-beta.6 (2017-06-22)\nMoved @blackbaud/skyux to package dependencies.\n2.0.0-beta.5 (2017-06-22)\nUpdated SKY UX to 2.0.0-rc.0.\nUpdated SKY UX Builder to 1.0.0-rc.2.\nAdjusted components to support Angular 4.x. (#101)\n2.0.0-beta.4 (2017-06-16)\nUpdated version of plugin to accept all patch releases.\n2.0.0-beta.3 (2017-06-15)\nFixed JSON Data, Route Metadata, and Config Service providers.\nConsolidated all plugins into a single plugin. (blackbaud/skyux-builder-plugin-stache)\nFixed StacheAffixTopDirective width bug. (#221)\nRemoved StacheConfigService and SkyAppConfig from app-extras.module.ts.\n2.0.0-beta.2 (2017-06-08)\n100% function code coverage\nImplemented new components and directives: StacheTutorialComponent, StacheAffixComponent, StacheGoogleAnalyticsDirective.\nImplemented service to convert JSON files into usable JavaScript objects, StacheJsonDataService.\nRoute names can be changed using the <stache>attributes pageTitle or navTitle.\nNew SKY UX Builder plugins were created for various reasons (check each plugin's README for more information):\n@blackbaud/skyux-builder-plugin-auth-email-whitelist\n@blackbaud/skyux-builder-plugin-stache-json-data\n@blackbaud/skyux-builder-plugin-stache-template-reference-variable\n@blackbaud/skyux-builder-plugin-stache-route-metadata/collector\n@blackbaud/skyux-builder-plugin-stache-route-metadata/generator\nFixed line-heights for list items and navigation. (#158)\nFixed StacheActionButtonsComponent styles when displaying less than 4 Action Buttons. (#171)\nSupport\nChangelog\nJune 2017\nMay 2017\nContribute"},{"path":"/support/changelog","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nSupport\nChangelog\nJuly 2017\nMonitor this page to keep up with the latest changes and releases for Stache 2.\nContents\n2.0.0-rc.0 (2017-07-26)\n2.0.0-beta.9 (2017-07-06)\n2.0.0-rc.0 (2017-07-26)\nConverted `StachePageAnchorComponent` to an anchor tag, to allow users to open the link in a new window. [#277]\nAdded search form to `StacheActionButtonsComponent`. #270\nRemoved custom bundling commands, relying on SKY UX Builder's new `skyux build-public-library` command. #234\nAdded support for external URLs in `StacheActionButtonsComponent`. #262\nAdded ability to include property bindings in `StacheTableOfContentsComponent`. #261\nAdded support for SKY UX `2.0.0-rc.9`. #278\nAdded support for SKY UX Builder `1.0.0-rc.12`.\nUpdated version of Node.JS due to security implications. #264\nFixed `StacheAffixComponent` sizing issues on smaller screens. #279\nGeneral cleanup and refactoring of existing code. #276 #269 #267 #259 #260\n2.0.0-beta.9 (2017-07-06)\nAdded navOrder to stache tag, to allow ordering of sidebar routes.\nAdded more language options for StacheCodeBlockComponent\nAdded support for SKY UX 2.0.0-rc.4\nAdded support for SKY UX Builder 1.0.0-rc.6\nFixed bug with StacheAffixComponent\nSupport\nChangelog\nJune 2017\nMay 2017\nContribute"},{"path":"/support/contribute","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nSupport\nContribute\nContribute\nTo enhance the creation of quality techical documentation, we highly encourage contributions from all Stache 2 users!\nSubmit a Request or Issue\nRequest new features or file a bug in our GitHub repo.\nComponent Library\nWe welcome contributions to the component library.\nDocumentation\nWe welcome contributions to our documentation. Follow git best practices and submit a PR for edits."},{"path":"/support/contribute/issues","text":"Local dev mode (show/hide info)"},{"path":"/support/contribute/stache-docs","text":"Local dev mode (show/hide info)"},{"path":"/support","text":"Local dev mode (show/hide info)\nHome\nLearn\nContent\nAPI\nSupport\nHome\nSupport\nSupport\nDo you need help with Stache 2? Contact us on the stache-general Slack channel or email the User Ed SDK/API team.\nSupport\nChangelog\nContribute"}]}